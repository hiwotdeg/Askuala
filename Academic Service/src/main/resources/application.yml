spring:
  application:
    name: Academic-Service

  kafka:
    bootstrap-servers: localhost:9092

  banner:
    location: classpath:banner.txt

  datasource:
    url: jdbc:postgresql://localhost:5432/askuala_academic
    username: ${USER_NAME}
    password: ${PASSWORD}

  jpa:
    generate-ddl: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update


#Service Discovery
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
server:
  ports: 0

#Actuator and circuit breaker
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  #Tracing
  tracing:
    sampling:
      probability: 1.0

resilience4j:
  circuitbreaker:
    instances:
      payment-service:
        registerHealthIndicator: true
        event-consumer-buffer-size: 100
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

  timelimiter:
    instances:
      payment-service:
        timeout-duration: 3s

  retry:
    instances:
      payment-service:
        max-attempts: 3
        wait-duration: 5s



#    url: ${JDBC_URL_ASQUALA_ACADEMIC:jdbc:postgresql://localhost:5432/askuala_academic}
#    username: ${PGSQL_USER_NAME:postgres}
#    password: ${PGSQL_PASSWORD:password}